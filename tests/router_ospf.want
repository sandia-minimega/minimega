## # ospf routes
## clear cc responses
## vm config filesystem $images/uminirouterfs
## vm config preinit $images/uminirouterfs/preinit
## vm config net a b
## vm launch container routerA
## vm config net b c
## vm launch container routerB
## vm config net c d
## vm launch container routerC
## vm config net a,00:1f:53:02:0b:51
## vm launch container vmA
## vm config net d,00:1f:53:02:0b:52
## vm launch container vmB
## # Test basic OSPF
## router routerA interface 0 10.0.0.1/24
## router routerA interface 1 10.1.0.1/24
## router routerA dhcp 10.0.0.1 static 00:1f:53:02:0b:51 10.0.0.2
## router routerA route ospf 0 0
## router routerA route ospf 0 1
## router routerA
IPs:
Network: 0: [10.0.0.1/24]
Network: 1: [10.1.0.1/24]

Listen address: 10.0.0.1
Low address:    
High address:   
Router:         
DNS:            
Static IPs:     
     00:1f:53:02:0b:51 10.0.0.2

OSPF Area:	0
Interfaces:
	0
	1

Log:
## clear router routerA route ospf 0 1
## router routerA
IPs:
Network: 0: [10.0.0.1/24]
Network: 1: [10.1.0.1/24]

Listen address: 10.0.0.1
Low address:    
High address:   
Router:         
DNS:            
Static IPs:     
     00:1f:53:02:0b:51 10.0.0.2

OSPF Area:	0
Interfaces:
	0

Log:
## clear router routerA route ospf
## router routerA
IPs:
Network: 0: [10.0.0.1/24]
Network: 1: [10.1.0.1/24]

Listen address: 10.0.0.1
Low address:    
High address:   
Router:         
DNS:            
Static IPs:     
     00:1f:53:02:0b:51 10.0.0.2

Log:
## router routerA route ospf 0 0
## router routerA route ospf 0 1
## router routerA commit
## shell sort /tmp/minimega/files/minirouter-routerA
bird commit
bird flush
bird ospf 0 0
bird ospf 0 1
bird routerid 10.1.0.1
dnsmasq commit
dnsmasq dhcp static 10.0.0.1 00:1f:53:02:0b:51 10.0.0.2
dnsmasq flush
ip add 0 10.0.0.1/24
ip add 1 10.1.0.1/24
ip flush
log level error
route del default
## # Test OSPF export
## router routerB interface 0 10.1.0.2/24
## router routerB interface 1 192.168.1.1/24
## router routerB route ospf 0 0
## router routerB route static 0.0.0.0/0 192.168.1.2 defaultroute
## router routerB route ospf 0 export 192.168.1.0/24
## router routerB route ospf 0 export 192.168.2.0/24
## router routerB route ospf 0 export defaultroute
## router routerB
IPs:
Network: 0: [10.1.0.2/24]
Network: 1: [192.168.1.1/24]

Named Static Routes:
defaultroute
	0.0.0.0/0	192.168.1.2

OSPF Area:	0
Interfaces:
	0
OSPF Export Networks or Routes:
	192.168.1.0/24
	192.168.2.0/24
	defaultroute

Log:
## clear router routerB route ospf 0 export 192.168.2.0/24
## router routerB
IPs:
Network: 0: [10.1.0.2/24]
Network: 1: [192.168.1.1/24]

Named Static Routes:
defaultroute
	0.0.0.0/0	192.168.1.2

OSPF Area:	0
Interfaces:
	0
OSPF Export Networks or Routes:
	192.168.1.0/24
	defaultroute

Log:
## router routerB commit
## shell sort /tmp/minimega/files/minirouter-routerB
bird commit
bird flush
bird ospf 0 0
bird ospf 0 filter 192.168.1.0/24
bird ospf 0 filter defaultroute
bird routerid 192.168.1.1
bird static 0.0.0.0/0 192.168.1.2 defaultroute
dnsmasq commit
dnsmasq flush
ip add 0 10.1.0.2/24
ip add 1 192.168.1.1/24
ip flush
log level error
route del default
## router routerC interface 0 192.168.1.2/24
## router routerC interface 1 10.2.0.1/24
## router routerC dhcp 10.2.0.1 static 00:1f:53:02:0b:52 10.2.0.2
## router routerC route static 0.0.0.0/0 192.168.1.1 defaultroute
## router routerC commit
## # Test EndtoEnd
## router vmA interface 0 dhcp
## router vmA gw 10.0.0.1
## router vmA commit
## router vmB interface 0 dhcp
## router vmB gw 10.2.0.1
## router vmB commit
## vm start routerA,routerB,routerC
## shell sleep 5
## vm start vmA,vmB
## shell sleep 60
## cc filter hostname=routerA
## cc exec route -n
## cc exec sh -c 'ip addr | grep "inet "'
## clear cc filter
## cc filter hostname=routerB
## cc exec route -n
## cc exec sh -c 'ip addr | grep "inet "'
## clear cc filter
## cc filter hostname=routerC
## cc exec route -n
## cc exec sh -c 'ip addr | grep "inet "'
## clear cc filter
## cc filter hostname=vmA
## cc exec sh -c 'ping -c 4 10.2.0.2 | grep -o "4 packets transmitted, 4 packets received"'
## clear cc filter
## cc filter hostname=vmB
## cc exec sh -c 'ping -c 4 10.0.0.2 | grep -o "4 packets transmitted, 4 packets received"'
## clear cc filter
## shell sleep 10
## cc responses 16 raw
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         10.1.0.2        0.0.0.0         UG    0      0        0 veth1
10.0.0.0        0.0.0.0         255.255.255.0   U     0      0        0 veth0
10.1.0.0        0.0.0.0         255.255.255.0   U     0      0        0 veth1
## cc responses 17 raw
inet 127.0.0.1/8 scope host lo
    inet 10.0.0.1/24 scope global veth0
    inet 10.1.0.1/24 scope global veth1
## cc responses 18 raw
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.1.2     0.0.0.0         UG    0      0        0 veth1
10.0.0.0        10.1.0.1        255.255.255.0   UG    0      0        0 veth0
10.1.0.0        0.0.0.0         255.255.255.0   U     0      0        0 veth0
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 veth1
## cc responses 19 raw
inet 127.0.0.1/8 scope host lo
    inet 10.1.0.2/24 scope global veth0
    inet 192.168.1.1/24 scope global veth1
## cc responses 20 raw
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.1.1     0.0.0.0         UG    0      0        0 veth0
10.2.0.0        0.0.0.0         255.255.255.0   U     0      0        0 veth1
192.168.1.0     0.0.0.0         255.255.255.0   U     0      0        0 veth0
## cc responses 21 raw
inet 127.0.0.1/8 scope host lo
    inet 192.168.1.2/24 scope global veth0
    inet 10.2.0.1/24 scope global veth1
## cc responses 22 raw
4 packets transmitted, 4 packets received
## cc responses 23 raw
4 packets transmitted, 4 packets received

