{{define "content"}}
<script type="text/javascript">
    window.mxBasePath = 'grapheditor/src';
    window.CSS_PATH = 'grapheditor/styles';
    window.STYLE_PATH = 'grapheditor/styles';
    window.RESOURCES_PATH = 'grapheditor/resources';
    window.STENCIL_PATH = 'grapheditor/stencils';
    window.IMAGE_PATH = 'grapheditor/images';
    window.EXPORT_URL = 'minibuilder/export';
    window.SAVE_URL = 'minibuilder/save';
    window.OPEN_URL = 'minibuilder/open';
    window.OPEN_FORM = 'grapheditor/open.html';
    window.UTILS_PATH = 'grapheditor/utils';

    // Adds another CSS document dynamically.
    var head = document.getElementsByTagName('head')[0];
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = 'grapheditor/styles/grapheditor.css';
    head.appendChild(link);

    // Parses URL parameters. Supported parameters are:
    // - lang=xy: Specifies the language of the user interface.
    // - touch=1: Enables a touch-style user interface.
    // - storage=local: Enables HTML5 local storage.
    // - chrome=0: Chromeless mode.
    var urlParams = (function(url)
    {
        var result = new Object();
        var idx = url.lastIndexOf('?');

        if (idx > 0)
        {
            var params = url.substring(idx + 1).split('&');

            for (var i = 0; i < params.length; i++)
            {
                idx = params[i].indexOf('=');

                if (idx > 0)
                {
                    result[params[i].substring(0, idx)] = params[i].substring(idx + 1);
                }
            }
        }

        return result;
    })(window.location.href);

    // Default resources are included in grapheditor resources
    mxLoadResources = false;
</script>
<script type="text/javascript" src="grapheditor/js/Init.js"></script>
<script type="text/javascript" src="grapheditor/deflate/pako.min.js"></script>
<script type="text/javascript" src="grapheditor/deflate/base64.js"></script>
<script type="text/javascript" src="grapheditor/jscolor/jscolor.js"></script>
<script type="text/javascript" src="grapheditor/sanitizer/sanitizer.min.js"></script>
<script type="text/javascript" src="grapheditor/src/js/mxClient.js"></script>
<script type="text/javascript" src="grapheditor/js/EditorUi.js"></script>
<script type="text/javascript" src="grapheditor/js/Editor.js"></script>
<script type="text/javascript" src="grapheditor/js/Sidebar.js"></script>
<script type="text/javascript" src="grapheditor/js/Graph.js"></script>
<script type="text/javascript" src="grapheditor/js/Format.js"></script>
<script type="text/javascript" src="grapheditor/js/Shapes.js"></script>
<script type="text/javascript" src="grapheditor/js/Actions.js"></script>
<script type="text/javascript" src="grapheditor/js/Menus.js"></script>
<script type="text/javascript" src="grapheditor/js/Toolbar.js"></script>
<script type="text/javascript" src="grapheditor/js/Dialogs.js"></script>

<!-- JSONEditor component and styles -->
<script src="grapheditor/utils/js/jsoneditor.js" type="text/javascript"></script>
<link href="grapheditor/utils/js/jsoneditor.min.css" rel="stylesheet" type="text/css">
<!-- <link href="grapheditor/utils/js/spectre.min.css" rel="stylesheet" type="text/css">
<link href="grapheditor/utils/js/spectre-exp.min.css" rel="stylesheet" type="text/css"> -->
<link href="grapheditor/utils/js/spectre-icons.min.css" rel="stylesheet" type="text/css">

<div id="editor" style="position:relative"></div>

<script type="text/javascript">
    function resizeEditorDiv() {
        var editor = document.getElementById("editor");
        var nav = document.getElementById("nav-container");
        var height = (window.innerHeight - nav.offsetHeight);
        editor.style['height'] = height + 'px';
    }
    window.addEventListener('resize', resizeEditorDiv);
    window.addEventListener('load', resizeEditorDiv);

</script>

<script type="text/javascript">
    // Extends EditorUi to update I/O action states based on availability of backend
    (function()
    {
        var editorUiInit = EditorUi.prototype.init;

        EditorUi.prototype.init = function()
        {
            editorUiInit.apply(this, arguments);
            this.actions.get('export').setEnabled(false);

            // Updates action states which require a backend
            if (!Editor.useLocalStorage)
            {
                mxUtils.post(OPEN_URL, '', mxUtils.bind(this, function(req)
                {
                    var enabled = req.getStatus() != 404;
                    this.actions.get('open').setEnabled(enabled || Graph.fileSupport);
                    this.actions.get('import').setEnabled(enabled || Graph.fileSupport);
                    this.actions.get('save').setEnabled(enabled);
                    this.actions.get('saveAs').setEnabled(enabled);
                    this.actions.get('export').setEnabled(enabled);
                }));
            }
        };

        // Adds required resources (disables loading of fallback properties, this can only
        // be used if we know that all keys are defined in the language specific file)
        mxResources.loadDefaultBundle = false;
        var bundle = mxResources.getDefaultBundle(RESOURCE_BASE, mxLanguage) ||
            mxResources.getSpecialBundle(RESOURCE_BASE, mxLanguage);

        // Fixes possible asynchronous requests
        mxUtils.getAll([bundle, STYLE_PATH + '/default.xml'], function(xhr)
        {
            // Adds bundle text to resources
            mxResources.parse(xhr[0].getText());

            // Configures the default graph theme
            var themes = new Object();
            themes[Graph.prototype.defaultThemeName] = xhr[1].getDocumentElement();

            // Main
            new EditorUi(new Editor(urlParams['chrome'] == '0', themes), document.getElementById("editor"));
        }, function()
        {
            document.body.innerHTML = '<center style="margin-top:10%;">Error loading resource files. Please check browser console.</center>';
        });
    })();
</script>

{{ end }}
